syntax = "proto3";

option java_multiple_files = true;
option java_package = "io.grpc.examples.nameserver";
option java_outer_classname = "NameProto";
option objc_class_prefix = "NS";

package nameserver;

// 定义服务
service NameService {
    // 服务中的方法，用于根据Name类型的参数获得一个Ip类型的返回值
    rpc getIpByName (Name) returns (Ip) {}
    rpc getComplexObjectByName(Name) returns (ComplexObject){}
}
//定义Name消息类型，其中name为其序列为1的字段
message Name {
    string name = 1;
}
//定义Ip消息类型，其中ip为其序列为1的字段
message Ip {
    string ip = 1;
}

message ComplexObject{
    int32 id = 1;
    string name = 2;
    string email = 3;
    repeated Result innerObj = 4;
    Gender gender = 5;
    map<string, MapValue> mapList = 6;

}

message MapValue{
    repeated Result ele = 1;
}

enum Gender{
  MAN = 0;
  WOMAN = 1;
}

message Result{
 string url = 1;
 string title = 2;
 repeated string snippets = 3;
}
